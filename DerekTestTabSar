/*
     Caleb Bushman, Derek Grove, Jacob Moore
     Robotics Lab 5
     Tabluar Sarsa 
*/


#define lMotor 0      //left motor port
#define rMotor 3      //right motor port
#define leftFront 9   //left front touch port
#define rightFront 10  //right front touch port
#define leftBack 8    //left back touch port
#define rightBack 7   //right back touch port

//int lMotorSpeed = 0;
//int rMotorSpeed = 0;
int enviroCheck = 0;
int lastActionIndex = 0;


//////////////////////////////////////////////////

//array of actions to call 
int actions[3] = {0,0,0};
//forward, turn left, turn right

//////////////////////// Main Code ////////////////////

void main()
{
     while(1)
      {
        //check the environment to see if any sensors are triggered.
        checkEnvironment();
       
        if (enviroCheck == 1)
          {
            printf("%d ", lastActionIndex);
            printf("Value: %d\n", actions[lastActionIndex]);
            //subtract a a tally from the last action taken
            actions[lastActionIndex]--;
            
            //choose new action
            chooseAction();
        }
        else
        {
          //didnt hit sensors so reward
          takeAction(0);
        }
     }
}

void chooseAction()
{
        //if the last action is foward 
        if((lastActionIndex == 0) && (enviroCheck == 0))
        {
          lastActionIndex = 0;
          
        }
        else
        {
          //compare all of the actions values to the current one and pick the highest
          int i = 0;
          int y = 0;
          while(i < 3)
          {
            //compare the actions to see what is the highest
            if(actions[i] > actions[y])
            {
              //y will be index with the largest value
              y = i;
            }
            i++;
          }
          
            lastActionIndex = y;
         

         }
         
          takeAction(lastActionIndex);
}

void takeAction(int number)
{
  if(number == 0)
  {
    moveForward();
  }
  if (number == 1)
  {
    turnLeft();
  }
  if (number == 2)
  {
    turnRight();
  }
}

////////////Actions/////////////////////

int checkEnvironment()
{
    if(digital(leftFront))
    {
        enviroCheck = 1;
        actions[1]++;
        actions[2]--;
    }
    else if(digital(rightFront))
    {
        enviroCheck = 1;
        actions[2]++;
        actions[1]--;
    }
    else if(digital(leftBack))
    {
        enviroCheck = 1;
        actions[1]--;
        actions[2]--;
    }
    else if(digital(rightBack))
    {
        enviroCheck = 1;
        actions[1]--;
        actions[2]--;
    }
    else
    {
      enviroCheck = 0;
    }
}


void moveForward()
{
   motor(lMotor,50);
   motor(rMotor,50);
   sleep(0.2);
}

void turnLeft()
{
    moveBackward();
    motor(lMotor, -25);
    motor(rMotor,75);
    sleep(0.3);
}

void turnRight()
{
    moveBackward();
    motor(lMotor,75);
    motor(rMotor,-25);
    sleep(0.3);
}

void moveBackward()
{
   motor(lMotor, -50);
   motor(rMotor, -50);
   sleep(1.5);
}
