#define lMotor 0      //left motor port
#define rMotor 3      //right motor port
#define leftFront 2   //left front touch port
#define rightFront 3  //right front touch port
#define leftBack 4    //left back touch port
#define rightBack 5   //right back touch port

int lMotorSpeed = 0;
int rMotorSpeed = 0;

int lastActionIndex = 0;


//////////////////////////////////////////////////

//array of actions to call 
int[] actions = [0,0,0];
//forward, turn left, turn right

//////////////////////// Main Code ////////////////////

void main()
{
     while(1)
     {
        //check to see if any sensors are hit
        if (checkEnvironment())
        {
            //stop motors
            //subtract a a tally from the last action taken
            actions[lastActionIndex]--;
            
            //choose new action
            chooseAction;
        }
        else
        {
          //didnt hit sensors so reward
          actions[LastActionIndex]++;
          //choose new action
          chooseAction;
        }
      
        //motor(leftMotor,lMotorSpeed);
        //motor(rightMotor,rMotorSpeed);
        printf("%d/n", lastActionIndex);
       // sleep(0.5);
     }
}

void chooseAction()
{
        //if the last action is foward 
        if((lastActionIndex == 0) && (checkEnvironment() = null))
        {
          lastActionIndex = 0;;
          
        }
        else
        {
          //compare all of the actions values to the current one and pick the highest
          int i = 0;
          int y = 0;
          while(actions[i] != null)
          {
            //compare the actions to see what is the highest
            if(actions[i] > actions[y])
            {
              //y will be index with the largest value
              y = actions[i];
            }
            i++;
          }

          if(y = lastActionIndex)
          {
            lastActionIndex = 0;
          }
          else
          {
            lastActionIndex = y;
          }

         }
         
          takeAction(lastActionTaken);
}

void takeAction(int number)
{
  if(number == 0)
  {
    moveForward();
  }
  else if (number == 1)
  {
    turnLeft();
  }
  else if (number == 2)
  {
    moveRight();
  }
}

////////////Actions/////////////////////

boolean checkEnvironment()
{
    if(digital(leftFront))
    {
      return true;
    }
    if(digital(rightFront))
    {
      return true;
    }
    if(digital(leftBack))
    {
      return true;
    }
    if(digital(rightBack))
    {
      return true;
    }
    //else
    return false;
}



void moveForward()
{
   motor(leftMotor,50);
   motor(rightMotor,50);
   delay(0.5);
}

void turnLeft()
{
    moveBackward();
    motor(leftMotor, -25);
    motor(rightMotor,75);
    delay(0.5);
}

void turnRight()
{
    moveBackward();
    motor(leftMotor,75);
    motor(rightMotor,-25);
    delay(0.5);
}



void moveBackward()
{
   motor(leftMotor, -50);
   motor(rightMotor, -50);
   delay(0.5);
}
