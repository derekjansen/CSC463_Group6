#define lMotor 0      //left motor port
#define rMotor 3      //right motor port
#define leftFront 2   //left front touch port
#define rightFront 3  //right front touch port
#define leftBack 4    //left back touch port
#define rightBack 5   //right back touch port

#define NUM_REWARDS 3

int lastActionIndex = 0;

float actionRewards = {0.00, 0.00, 0.00};

float compileTime = seconds();

void main()
{
    for(;;)
      {
         if(digital(leftFront) == 1 || digital(rightFront) == 1 || digital(leftBack) == 1 || digital(rightBack) == 1)
          {
            actionRewards[lastActionIndex] -= .1;
            executeAction(chooseAction());
        } 
        else
          {
            actionRewards[lastActionIndex] += .1;
            executeAction(chooseAction());
        }
    }
}

int chooseAction()
{
    int index = 0;
    float max = 0.00;
    int i1 = 0;
    for(i1 = 0; i1 < NUM_REWARDS; i1++)
    {
        if(actionRewards[NUM_REWARDS] > max)
        {
            max = actionRewards[i1];
            index = i1;
        }
    }
    return index;
}

void executeAction(int index)
{
    switch(index)
    {
        case 0:
          moveForward();
          break;
        case 1:
          turnLeft()
          break;
        case 2:
          turnRight()
          break;
    }
}

void moveForward()
{
    motor(lMotor, 50.0);
    motor(rMotor, 50.0);
    lastActionIndex = 0;
}

void turnLeft()
{
    motor(lMotor, -50.0);
    motor(rMotor, 50.0);
    sleep(2.0);
    
    motor(lMotor, -25.0);
    motor(rMotor, 75.0);
    lastActionIndex = 1;
}

void turnRight()
{
    motor(lMotor, -50.0);
    motor(rMotor, 50.0);
    sleep(2.0);
    
    motor(lMotor, 75.0);
    motor(rMotor, -25.0);
    lastActionIndex = 2;
}
